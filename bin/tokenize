#!/usr/bin/env php
<?php
/**
 * This file is part of the Symbiont package.
 *
 * (c) Jan-Marten de Boer <symbiont@janmarten.name>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace Symbiont\Test;

require_once __DIR__ . '/autoload.php';

use SplFileObject;
use Symbiont\Language\Tokenizer\Context\TokenContextFormatter;
use Symbiont\Language\Tokenizer\Finder\TokenFinder;
use Symbiont\Language\Tokenizer\Strategy\EndStatementStrategy;
use Symbiont\Language\Tokenizer\Strategy\NumberStrategy;
use Symbiont\Language\Tokenizer\Strategy\OperatorStrategy;
use Symbiont\Language\Tokenizer\Strategy\VariableStrategy;
use Symbiont\Language\Tokenizer\Strategy\WhitespaceStrategy;
use Symbiont\Language\Tokenizer\StatelessTokenizer;
use Symbiont\Language\Tokenizer\Optimizer\TokenOptimizer;
use Symbiont\Language\Tokenizer\UnexpectedTokenSequenceException;

if ($argc < 2) {
    echo 'Missing file argument.' . PHP_EOL;
    exit(1);
}

$file      = new SplFileObject($argv[1], 'r');
$optimizer = new TokenOptimizer();
$tokenizer = new StatelessTokenizer(
    new TokenFinder(
        new WhitespaceStrategy(),
        new VariableStrategy(),
        new OperatorStrategy('=', '+=', '-=', '==='),
        new NumberStrategy(),
        new EndStatementStrategy()
    )
);

$tokens = $optimizer($tokenizer($file));

try {
    foreach ($tokens as $token) {
        echo sprintf(
            "%s \"%s\"",
            str_pad($token->getName(), 20, ' '),
            $token->getValue()
        ) . PHP_EOL;
    }
} catch (UnexpectedTokenSequenceException $exception) {
    echo PHP_EOL . $exception->getMessage() . PHP_EOL;

    $context = $exception->getContext();

    if ($context !== null) {
        $formatter = new TokenContextFormatter();
        echo PHP_EOL . $formatter($context) . PHP_EOL;
    }

    while ($exception = $exception->getPrevious()) {
        if ($exception instanceof UnexpectedTokenSequenceException) {
            continue;
        }

        echo PHP_EOL . '[_] ' . $exception->getMessage() . PHP_EOL;
    }

    exit(1);
}
